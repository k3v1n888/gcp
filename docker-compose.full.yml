# Copyright (c) 2025 Kevin Zachary
# All rights reserved.
#
# This software and associated documentation files (the "Software") are the 
# exclusive property of Kevin Zachary. Unauthorized copying, distribution, 
# modification, or use of this software is strictly prohibited.
#
# For licensing inquiries, contact: kevin@zachary.com

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ssai_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cyberdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ssai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d cyberdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ssai_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - ssai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # AI Service (Your trained models)
  ai-service:
    build:
      context: .
      dockerfile: ai-service/Dockerfile.dev
    container_name: ssai_ai_service
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./ai-service:/app
      - ./ai-service/models:/app/models
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
    networks:
      - ssai_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: ssai_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    environment:
      - DEV_MODE=true
      - DATABASE_URL=postgresql://user:password@db:5432/cyberdb
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8001
      - FRONTEND_URL=http://frontend:3000
      - PYTHONUNBUFFERED=1
    networks:
      - ssai_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: ssai_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_AI_SERVICE_URL=http://localhost:8001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - ssai_network
    depends_on:
      backend:
        condition: service_healthy
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  ssai_network:
    driver: bridge
